/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.55
 * Generated at: 2014-10-08 05:37:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class test_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<title></title>\n");
      out.write("<body>\n");
      out.write("<h1>WebSocket Chat</h1>\n");
      out.write("<section id=\"content\"></section>\n");
      out.write("<input id=\"message\" type=\"text\"/>\n");
      out.write("<script type=\"text/javascript\" src=\"scripts/jquery.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"scripts/swfobject.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"scripts/web_socket.js\"></script>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\" src=\"scripts/jquery.websocket-0.0.1.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"scripts/jquery.json-2.4.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"scripts/reconnecting-websocket.js\"></script>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("if (\"WebSocket\" in window)\n");
      out.write("{\n");
      out.write("\talert(\"WebSocket supported here!  :)\\r\\n\\r\\nBrowser: \" + navigator.appName + \" \" + navigator.appVersion + \"\\r\\n\\r\\n(based on Google sample code)\");\n");
      out.write("}else{\n");
      out.write("\talert(\"浏览器不支持\");\n");
      out.write("}\n");
      out.write("var WEB_SOCKET_SWF_LOCATION = 'media/WebSocketMain.swf';\n");
      out.write("var ws = new ReconnectingWebSocket(\"ws://172.16.11.3:55555/service\");\n");
      out.write("\n");
      out.write("ws.onopen = function()\n");
      out.write("{\n");
      out.write("\t// Web Socket is connected\n");
      out.write("\talert(\"websocket is open\");\n");
      out.write("\t\n");
      out.write("\t// You can send data now\n");
      out.write("\tws.send(\"Hey man, you got the time?\");\n");
      out.write("};\n");
      out.write("ws.onmessage = function(evt) { alert(\"received: \" + evt.data); };\n");
      out.write("ws.onclose = function() { alert(\"websocket is closed\"); };\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
